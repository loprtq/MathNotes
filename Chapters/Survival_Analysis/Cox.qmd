# Cox Regression {#sec-Cox}

$$
h(t) = h_0(t) \cdot \exp\left(\sum_{i=1}^p b_ix_i\right)
$$ {#eq-Cox}
where $h_0$ is the baseline hazard function, $x_1,x_2,\dots,x_p$ are the covariates and $b_1,b_2,\dots,b_p$ the associated effect sizes of the covariates.

## Stratification
When stratifying a Cox model (See @eq-Cox), it allows the model to fix different baseline hazard functions $h_0$ for each stratum. Thus, if there are two stratum, $g=1$ and $g=2$, the Cox model is given as 
$$
h(t) = \begin{cases}
h_{0, g=1}(t) \cdot \exp\left(\sum_{i=1}^p b_ix_i\right) & \textrm{if } g=1\\
h_{0, g=2}(t) \cdot \exp\left(\sum_{i=1}^p b_ix_i\right) & \textrm{if } g=2
\end{cases}
$$ {#eq-Cox-stratification}
meaning that the two stratum share the same effect sizes $b_1,b_2,\dots,b_p$. On the contrary, if you were to not stratify the model, and instead fit two seperate models, one for each stratum in the provided example, then this would not neccesarrily be the case.

:::{#exm-Cox}
## Proportional Cox model
```{r}
#| eval: false
#| echo: true
#| warning: false
## Packages
library(survival)
library(survminer)

## Data

## Model
# * status == 1: event, status == 0: censored
cox_fit <- survival::coxph(survival::Surv(time, status == 1) ~ 1, data, ties = "breslow")

# Coefficients
survival::cox.zph(Cox) # Test if covariate HR changes over time


## Plot
plot(survival::cox.zph(Cox)) # See much it would change over time (when y=0, it would not change)
survminer::ggsurvplot(survfit(Cox), conf.int = TRUE, data)
```
:::